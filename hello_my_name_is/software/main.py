"""***********************************************************
PROGRAM NAME:   main.py
PROGRAMMER:     M. STRIDE, 2022-07-17
DESCRIPTION:    Firmware for 'hello my name is' PCB badge.
TODO:           
BUGS:           
***********************************************************"""

'''
Program Description:
- Show Name > Buttons cycle to info page
- Info Page > Hometown [NL Pixel Map?], University, Job, Hobbies
'''

import machine
import utime
import ssd1306 #save ssd1306 lib to pico first
import framebuf

#PINS
button_SW4_UP = machine.Pin(1, machine.Pin.IN)
button_SW5_DOWN = machine.Pin(0, machine.Pin.IN) 
sensor_RP2040_die_temp = machine.ADC(4)
oled_rst = machine.Pin(15, machine.Pin.OUT)

#SETUP
oled_rst.low()
utime.sleep(0.1)
oled_rst.high()
utime.sleep(0.1)

#I2C
i2c0 = machine.I2C(0, sda=machine.Pin(16), scl=machine.Pin(17), freq=400000)

oled = ssd1306.SSD1306_I2C(width=128, height=64, i2c=i2c0, addr=0x3C)

#GLOBAL VARS
adc_conversion_factor = 3.3 / (65535)
button_c = 0
prev_button_press = 0
state = 0
state_flag = 1
#https://diyusthad.com/image2cpp
name_ms = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x80\x0f\x81\xc7\xff\xf8\x07\xc0\xf0\x0f\x00\x00\x00\x00\x00\x3f\x80\x1f\xc1\xc7\xff\xf8\x3f\xf0\xf0\x0f\x00\x00\x00\x00\x00\x3f\xc0\x1f\xc1\xc7\xff\xf8\x7f\xf8\xf0\x0f\x00\x00\x00\x00\x00\x3f\xc0\x3f\xc1\xc0\x1e\x00\xfc\x38\xf0\x0f\x00\x00\x00\x00\x00\x3d\xc0\x3b\xc1\xc0\x1e\x00\xf0\x08\xf0\x0f\x00\x00\x00\x00\x00\x3d\xe0\x7b\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3d\xe0\x73\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\xe0\x73\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\xf0\xf3\xc1\xc0\x1e\x03\xe0\x00\xff\xff\x00\x00\x00\x00\x00\x3c\xf0\xe3\xc1\xc0\x1e\x03\xe0\x00\xff\xff\x00\x00\x00\x00\x00\x3c\x78\xe3\xc1\xc0\x1e\x03\xe0\x00\xff\xff\x00\x00\x00\x00\x00\x3c\x79\xe3\xc1\xc0\x1e\x03\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\x39\xc3\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\x3f\xc3\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\x3f\xc3\xc1\xc0\x1e\x01\xe0\x00\xf0\x0f\x00\x00\x00\x00\x00\x3c\x1f\x83\xc1\xc0\x1e\x01\xf0\x08\xf0\x0f\x00\x00\x00\x00\x00\x3c\x1f\x83\xc1\xc0\x1e\x00\xf8\x38\xf0\x0f\x00\x00\x00\x00\x00\x3c\x1f\x83\xc1\xc0\x1e\x00\x7f\xf8\xf0\x0f\x00\x00\x00\x00\x00\x3c\x0f\x03\xc1\xc0\x1e\x00\x3f\xf0\xf0\x0f\x00\x00\x00\x00\x00\x3c\x0f\x03\xc1\xc0\x1e\x00\x0f\xc0\xf0\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f\x0f\xff\xf3\xff\x00\x70\x7f\xe0\x03\xff\x80\x00\x00\x00\x00\xff\xcf\xff\xf3\xff\xc0\x70\x7f\xfc\x07\xff\x80\x00\x00\x00\x01\xff\xcf\xff\xf3\xff\xe0\x70\x7f\xfe\x07\xff\x80\x00\x00\x00\x01\xe0\xc0\x3c\x03\xc1\xf0\x70\x78\x3f\x07\x80\x00\x00\x00\x00\x01\xe0\x00\x3c\x03\xc0\xf0\x70\x78\x0f\x87\x80\x00\x00\x00\x00\x03\xc0\x00\x3c\x03\xc0\xf0\x70\x78\x07\x87\x80\x00\x00\x00\x00\x01\xe0\x00\x3c\x03\xc0\xf0\x70\x78\x07\x87\x80\x00\x00\x00\x00\x01\xf8\x00\x3c\x03\xc0\xf0\x70\x78\x03\xc7\x80\x00\x00\x00\x00\x01\xfe\x00\x3c\x03\xc1\xe0\x70\x78\x03\xc7\xff\x00\x00\x00\x00\x00\xff\x80\x3c\x03\xff\xe0\x70\x78\x03\xc7\xff\x00\x00\x00\x00\x00\x3f\xc0\x3c\x03\xff\x80\x70\x78\x03\xc7\xff\x00\x00\x00\x00\x00\x0f\xc0\x3c\x03\xff\x80\x70\x78\x03\xc7\x80\x00\x00\x00\x00\x00\x03\xe0\x3c\x03\xc7\xc0\x70\x78\x03\xc7\x80\x00\x00\x00\x00\x00\x01\xe0\x3c\x03\xc3\xe0\x70\x78\x07\x87\x80\x00\x00\x00\x00\x00\x01\xe0\x3c\x03\xc1\xe0\x70\x78\x07\x87\x80\x00\x00\x00\x00\x02\x01\xe0\x3c\x03\xc1\xf0\x70\x78\x0f\x87\x80\x00\x00\x00\x00\x03\x83\xc0\x3c\x03\xc0\xf0\x70\x78\x3f\x07\x80\x00\x00\x00\x00\x03\xff\xc0\x3c\x03\xc0\xf0\x70\x7f\xfe\x07\xff\x80\x00\x00\x00\x01\xff\x80\x3c\x03\xc0\x78\x70\x7f\xfc\x07\xff\x80\x00\x00\x00\x00\x7e\x00\x3c\x03\xc0\x78\x70\x7f\xe0\x03\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
nl_map = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3e\x00\x00\x00\x00\x00\x00\x01\xe2\x00\x00\x00\x00\x00\x00\x01\x5e\x00\x00\x00\x00\x00\x00\x07\x30\x00\x00\x00\x00\x00\x00\x06\x30\x00\x00\x00\x00\x00\x00\x05\x78\x00\x00\x00\x00\x00\x00\x0c\x08\x00\x00\x00\x00\x00\x00\x19\x18\x00\x00\x00\x00\x00\x00\x19\x50\x00\x00\x00\x00\x00\x00\x08\x10\x00\x00\x00\x00\x00\x00\x19\x70\x00\x00\x00\x00\x00\x00\x20\x40\x00\x00\x00\x00\x00\x00\x20\x40\x00\x00\x00\x00\x00\x00\xe0\x40\x00\x00\x00\x00\x00\x00\x80\x40\x00\x00\x00\x00\x00\x00\xa9\xc0\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x01\xa9\x00\x00\x00\x00\x00\x00\x01\x81\x3f\x00\x00\x00\x00\x00\x01\x2b\x29\x80\x00\x00\x00\x00\x01\x2a\x29\x80\x00\x00\x00\x00\x01\x02\x21\x00\x00\x00\x00\x00\x01\x2a\xea\x00\x00\x00\x00\x00\x01\x03\x02\x00\x06\x00\x00\x00\x01\x00\x02\x00\x46\x00\x00\x00\x07\x29\x6b\xf0\x7f\xe0\x00\x00\x04\x00\x00\x0f\xc0\x20\x00\x00\x05\x29\x69\x5b\x4a\x60\x00\x00\x1d\x00\x08\x00\x40\x60\x00\x00\x18\x00\x00\x00\x00\xc0\x00\x00\x1f\x69\x6b\x4b\x4a\x80\x00\x00\x06\x00\x00\x00\x00\x80\x00\x00\x07\x29\x09\x48\x42\x80\x00\x00\x3f\x29\x49\x4a\x4a\x67\x80\x00\x30\x00\x00\x00\x00\x1f\x80\x00\x2d\x29\x6b\x4b\x5a\x5e\x00\x00\x20\x00\x00\x00\x00\x04\x00\x00\x20\x00\x00\x00\x00\x04\x00\x07\xed\x29\x69\x4b\x4a\x5c\x00\x1c\x00\x00\x00\x00\x00\x05\x80\x1f\xff\x29\x69\x4b\x4a\x7d\x80\x00\x30\x00\x00\x00\x00\x11\x80\x00\x30\x00\x00\x00\x00\x11\x80\x00\xed\x69\x6b\x4b\x4a\x52\x80\x01\x00\x00\x00\x00\x00\x12\x8c\x03\x21\x29\x09\x48\x4f\xf2\x8c\x05\x29\x29\x49\x4a\xce\x3e\xb4\x08\x00\x00\x00\x01\x66\x22\xa4\x1d\x2d\x69\x6f\xee\x7e\x3a\xd4\x10\x00\x00\x10\x28\x42\x20\x04\x18\x0f\xff\xf0\x38\x4e\x20\x1c\x05\x30\x00\x00\x01\xd0\x3a\x50\x07\xe0\x00\x00\x01\x70\x23\x10\x00\x00\x00\x00\x01\x40\x2d\x50\x00\x00\x00\x00\x07\x40\x31\x10\x00\x00\x00\x00\x04\xc0\x31\x10\x00\x00\x00\x00\x3b\x80\x31\xf0\x00\x00\x00\x00\x23\x00\x11\x80\x00\x00\x00\x00\x3c\x00\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
nl_flag = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xff\xf0\x00\x00\xff\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xff\x80\x00\x00\x3f\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xfc\x00\x00\x00\x0f\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x00\x0f\xe0\x00\x0c\x00\x07\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x00\x7f\x00\x00\x0f\x00\x01\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x07\xf8\x00\x00\x0f\xc0\x00\x7f\xff\xff\xe0\x18\x00\x00\x00\x00\x3f\xc0\x00\x00\x0f\xf0\x00\x1f\xff\xff\xe0\x18\x00\x00\x00\x01\xfe\x00\x00\x00\x0f\xf8\x00\x07\xff\xff\xe0\x18\x00\x00\x00\x0f\xf0\x00\x00\x00\x0f\xfe\x00\x03\xff\xff\xe0\x18\x00\x00\x00\x7f\x80\x00\x00\x00\x0f\xff\x80\x00\xff\xff\xe0\x18\x00\x00\x03\xfc\x00\x00\x00\x00\x0f\xff\xe0\x00\x3f\xff\xe0\x18\x00\x00\x1f\xe0\x00\x00\x00\x00\x0f\xff\xf8\x00\x0f\xff\xe0\x18\x00\x00\xff\x00\x00\x00\x00\x00\x0f\xff\xfe\x00\x03\xff\xe0\x18\x00\x07\xf8\x00\x00\x00\x00\x00\x0f\xff\xff\x80\x00\xff\xe0\x18\x00\x3f\xc0\x00\x00\x00\x00\x00\x0f\xff\xff\xc0\x00\x7f\xe0\x18\x03\xfe\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xf0\x00\x1f\xe0\x18\x1f\xf0\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xfc\x00\x07\xe0\x18\xff\x80\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\x00\x01\xe0\x1f\xfc\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xc0\x00\x60\x1f\xe0\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xe0\x00\x20\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xf8\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x60\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x30\x00\x00\x00\x00\x00\x00\x00\x01\x80\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x30\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x60\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xfc\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xf0\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xc0\x00\x60\x1f\xc0\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\x00\x01\xe0\x1f\xf8\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xfc\x00\x07\xe0\x19\xff\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xf8\x00\x0f\xe0\x18\x1f\xe0\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xe0\x00\x3f\xe0\x18\x03\xfc\x00\x00\x00\x00\x00\x00\x0f\xff\xff\x80\x00\xff\xe0\x18\x00\x7f\x80\x00\x00\x00\x00\x00\x0f\xff\xfe\x00\x03\xff\xe0\x18\x00\x0f\xf0\x00\x00\x00\x00\x00\x0f\xff\xf8\x00\x0f\xff\xe0\x18\x00\x01\xfe\x00\x00\x00\x00\x00\x0f\xff\xf0\x00\x1f\xff\xe0\x18\x00\x00\x3f\xc0\x00\x00\x00\x00\x0f\xff\xc0\x00\x7f\xff\xe0\x18\x00\x00\x07\xf8\x00\x00\x00\x00\x0f\xff\x00\x01\xff\xff\xe0\x18\x00\x00\x00\xff\x00\x00\x00\x00\x0f\xfc\x00\x07\xff\xff\xe0\x18\x00\x00\x00\x1f\xe0\x00\x00\x00\x0f\xf0\x00\x1f\xff\xff\xe0\x18\x00\x00\x00\x03\xfc\x00\x00\x00\x0f\xc0\x00\x7f\xff\xff\xe0\x18\x00\x00\x00\x00\x3f\x80\x00\x00\x0f\x00\x01\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x07\xf0\x00\x00\x0e\x00\x03\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x00\xfe\x00\x00\x08\x00\x0f\xff\xff\xff\xe0\x18\x00\x00\x00\x00\x00\x1f\xc0\x00\x00\x00\x3f\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x00\xff\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xff\x00\x00\x01\xff\xff\xff\xff\xe0\x1f\xff\xff\xff\xff\xff\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

#FUNCTIONS
def button_UP_pressed(pin):   #ISR
    global state, state_flag, prev_button_press
    new_time = utime.ticks_ms()
    if (new_time - prev_button_press) > 400:    #debounce
        prev_button_press = new_time
        state = state + 1
        state_flag = 1

def button_DOWN_pressed(pin):   #ISR
    global state, state_flag, prev_button_press
    new_time = utime.ticks_ms()
    if (new_time - prev_button_press) > 400:    #debounce
        prev_button_press = new_time
        state = state - 1
        state_flag = 1

def read_temp():
    data = sensor_RP2040_die_temp.read_u16() * adc_conversion_factor
    # Typically, Vbe = 0.706V @ 27°C, with a slope of -1.721mV (0.001721) per degree. 
    RP2040_die_temp = 27 - (data - 0.706)/0.001721
    return RP2040_die_temp

def oled_pixel_check():
    oled.fill(1)
    oled.show()
    utime.sleep(0.8)
    oled.fill(0)
    oled.show()
    
def oled_setup():
    oled_pixel_check()
    for i in range(8):
        oled.fill(0)   #clears screen
        oled.text("Hello my name is", 0, 0)
        oled.text("PCB badge", 0, 10)
        oled.text("RP2040 Die Temp:", 0, 30)
        oled.text(f'{read_temp():.1f}', 0, 40)
        oled.show()
        utime.sleep(1)
    
def state_machina():
    global state, state_flag
    prev_time = 0
    while True:
        #setting state bounds
        if state < 0:
            state = 4
        if state > 5:
            state = 0
            
        #default to name screen after <X> time
        new_time = utime.ticks_ms()
        if (new_time - prev_time) > (1*60*1000):    #1min
            prev_time = new_time
            state = 0
            state_flag = 1
        
        #Screen SM------
        if state_flag == 1:
            prev_time = utime.ticks_ms()
            state_flag = 0
            print(f'State [{state}]')
            if state == 0:
                fb = framebuf.FrameBuffer(name_ms, 128, 64, framebuf.MONO_HLSB)
                oled.blit(fb, 0, 0)   
                oled.show()
            if state == 1:
                oled.fill(0)
                oled.text("Hometown:", 0, 15)
                oled.text("Lewisporte, NL", 0, 25)
                oled.text("Canada", 0, 35)
                oled.show()
            if state == 2:
                oled.fill(0)
                fb = framebuf.FrameBuffer(nl_map, 64, 64, framebuf.MONO_HLSB)
                oled.blit(fb, 32, 0)
                oled.show()
            if state == 3:
                oled.fill(0)
                fb = framebuf.FrameBuffer(nl_flag, 128, 64, framebuf.MONO_HLSB)
                oled.blit(fb, 0, 0)
                oled.show()
            if state == 4:
                oled.fill(0)
                oled.text("Memorial", 0, 0)
                oled.text("University", 0, 10)
                oled.text("of Newfoundland", 0, 20)
                oled.text("Electrical", 0, 40)
                oled.text("Engineering", 0, 50)
                oled.show()
            if state == 5:
                oled.fill(0)
                oled.text("Hobbies:", 0, 0)
                oled.text("- Hiking", 0, 10)
                oled.text("- Electronics", 0, 20)
                oled.text("- Basketball", 0, 30)
                oled.text("- Video Games", 0, 40)
                oled.text("- Wine Brewing", 0, 50)
                oled.show()

#---------------------------MAIN-----------------------------------
def main():
    utime.sleep(0.5)   #wait for serial terminal
    print("'Hello my name is' PCB badge SW")
    button_SW4_UP.irq(trigger=machine.Pin.IRQ_FALLING,  handler=button_UP_pressed)
    button_SW5_DOWN.irq(trigger=machine.Pin.IRQ_FALLING,  handler=button_DOWN_pressed)
    
    oled_setup()
    state_machina()
    print("END")

if __name__ == "__main__":
    main()
#------------------------------------------------------------------
